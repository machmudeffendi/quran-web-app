{"version":3,"sources":["serviceWorker.js","view/navbar/Navbar.js","services/redux/actionCreators.js","services/redux/types.js","view/home/listSurah/ListSurah.js","view/home/Home.js","view/surah/listAyyah/ListAyyah.js","view/surah/audioPlayer/AudioPlay.js","view/surah/Surah.js","view/nomatch/NoMatch.js","view/topButton/TopButton.js","view/footer/index.js","App.js","services/redux/apiMiddleware.js","services/redux/loggingMiddleware.js","services/redux/currentSurah.js","services/redux/currentAyyah.js","services/redux/reducers.js","services/redux/configureStore.js","containers/Root.js","index.js"],"names":["Boolean","window","location","hostname","match","Navbar","this","props","title","onClick","darkmode","className","to","React","Component","host","fetchNewSurah","callback","type","payload","meta","url","ListSurah","item","nama","asma","dangerouslySetInnerHTML","__html","keterangan","nomor","Home","state","isLoading","handleUpdateSurah","setState","updateSurah","currentSurah","Fragment","role","undefined","map","index","key","defaultProps","arti","audio","connect","dispatch","ListAyyah","arab","arabTranslate","indonesia","AudioPlay","play","togglePlay","bind","controls","src","Surah","noSurah","isLoadingTitle","isLoadingContent","redirect","redirectSurah","itemSurah","surahRedirect","nosurah","params","id","updateAyyah","error","scrollTo","currentAyyah","event","target","value","history","push","description","charset","name","keywords","onChange","hidden","ar","tr","withRouter","fetchNewAyyah","NoMatch","handleToTop","TopButton","Footer","href","App","darkMode","busrainCss","toggleDarkMode","join","path","exact","component","apiMiddleware","store","next","action","fetchOption","Object","assign","fetch","then","response","json","onSuccess","newAction","loggingMiddleware","console","log","initialState","reducer","rootReducer","combineReducers","configureStore","createStore","applyMiddleware","Root","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5db547dc.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nclass Navbar extends React.Component{\r\n\r\n    render(){\r\n        const {title,onClick,darkmode} = this.props\r\n        return(\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-c-green\">\r\n                <div className=\"container\">\r\n                    <Link className=\"navbar-brand\" to=\"/quran-web-app/#\" >{title}</Link>\r\n                    <div className=\"mr-auto\">\r\n                        <div className=\"navbar-nav\">\r\n                        <Link className=\"nav-item nav-link active\" to=\"/quran-web-app/#\">Home <span className=\"sr-only\">(current)</span></Link>\r\n                        <Link className=\"nav-item nav-link\" to=\"/quran-web-app/surah\">Baca Surah</Link>\r\n                        <Link className=\"nav-item nav-link\" to=\"/quran-web-app/description\">Lihat Deskripsi</Link>\r\n                        </div>\r\n                    </div>\r\n                <button className=\"btn btn-dark btn-c-nav\" onClick={onClick}>{darkmode ? 'Light Mode' : 'Dark Mode'}</button>\r\n                </div>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navbar;","import * as types from './types';\r\n\r\nconst host = 'https://al-quran-8d642.firebaseio.com';\r\nconst listSurah = '/data.json?print=pretty';\r\n// const listAyyah = '/surat/1.json?print=pretty';\r\n\r\nexport const fetchNewSurah = (callback) => ({\r\n    type: types.FETCH_NEW_SURAH,\r\n    payload: [],\r\n    meta: {\r\n        type: 'api',\r\n        url: host + listSurah,\r\n        callback: callback,\r\n    }\r\n})\r\n\r\nexport const fetchNewAyyah = (noSurah = 1, callback) => ({\r\n    type: types.FETCH_NEW_AYYAH,\r\n    payload: [],\r\n    meta: {\r\n        type: 'api',\r\n        url: host + `/surat/${noSurah}.json?print=pretty`,\r\n        callback: callback\r\n    }\r\n})","export const FETCH_NEW_SURAH = 'FETCH_NEW_SURAH';\r\nexport const FETCH_NEW_AYYAH = 'FETCH_NEW_AYYAH';","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst ListSurah = ({item}) =>{\r\n    return(\r\n        <div className=\"col-sm-12 col-md-4 mt-3 mb-3\">\r\n            <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">{item.nama}</h5>\r\n                    <h6 className=\"card-subtitle mb-2 text-muted\">{item.asma}</h6>\r\n                    <p className=\"card-text desc-h-scroll\"><span dangerouslySetInnerHTML={{__html: item.keterangan}} /></p>\r\n                    <Link to={'/quran-web-app/surah/' + item.nomor} className=\"card-link\">Baca</Link>\r\n                    <Link to={'/quran-web-app/surah/description/' + item.nomor} className=\"card-link\">Lihat Deskripsi</Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        // <div className=\"items\" key={index}>\r\n        //     <div className=\"book\">\r\n        //         <Link to={'/surah/' + nomor} className=\"title-link\">{nama}</Link>\r\n        //         <p className=\"text-grey\">{asma}</p>\r\n        //         <span>{nomor}</span>\r\n        //     </div>\r\n        // </div>\r\n    )\r\n}\r\n\r\nexport default ListSurah;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { fetchNewSurah } from '../../services/redux/actionCreators';\r\nimport ListSurah from './listSurah/ListSurah';\r\n\r\nclass Home extends React.Component {\r\n\r\n    state = {\r\n        isLoading: false\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.handleUpdateSurah()\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        this.props.currentSurah.currentSurah = [];\r\n    }\r\n\r\n    handleUpdateSurah = () => {\r\n        this.setState({isLoading: true})\r\n        this.props.updateSurah(() => {\r\n            this.setState({isLoading: false})\r\n        })\r\n    }\r\n\r\n    render(){\r\n        const { currentSurah } = this.props;\r\n        const { isLoading } = this.state;\r\n        return(\r\n            <React.Fragment>\r\n            <div className=\"jumbotron jumbotron-fluid\">\r\n                <div className=\"container\">\r\n                    <h1 className=\"display-4\">Assalamuallaikum</h1>\r\n                    <p className=\"lead\">Selamat datang di Quran Web.</p>\r\n                </div>\r\n            </div>\r\n            \r\n            <div className=\"container mb-5 content\">\r\n                <div className=\"row\">\r\n                    <h2>{isLoading && <div className=\"spinner-border\" role=\"status\"><span className=\"sr-only\">Loading...</span></div>}</h2>\r\n                    {\r\n                    currentSurah.currentSurah.map === undefined \r\n                        ? <span className=\"alert alert-danger w-100\">Opps... Not found any data!</span> \r\n                        : currentSurah.currentSurah.map((item,index) => (<ListSurah key={index} item={item}/>))\r\n                    }\r\n                </div>\r\n            </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nHome.propTypes = {\r\n    currentSurah: PropTypes.object.isRequired\r\n};\r\n  \r\nHome.defaultProps = {\r\n    currentSurah: {\r\n        currentSurah: [{\r\n            asma: 'asma',\r\n            nama: 'Al-Fatihah',\r\n            arti: 'Pembukaan',\r\n            keterangan: 'Keterangan',\r\n            audio: 'audio',\r\n            nomor: 1\r\n        },{\r\n            asma: 'asma',\r\n            nama: 'Al-Baqarah',\r\n            arti: 'Sapi Betina',\r\n            keterangan: 'Keterangan',\r\n            audio: 'audio',\r\n            nomor: 2\r\n        },{\r\n            asma: 'asma',\r\n            nama: 'Ali\\'Imran',\r\n            arti: 'Keluarga Imran',\r\n            keterangan: 'Keterangan',\r\n            audio: 'audio',\r\n            nomor: 3\r\n        },{\r\n            asma: 'asma',\r\n            nama: 'An-Nisa',\r\n            arti: 'Wanita',\r\n            keterangan: 'Keterangan',\r\n            audio: 'audio',\r\n            nomor: 4\r\n        },]\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    updateSurah: (callback) => {\r\n        dispatch(fetchNewSurah(callback))\r\n    }\r\n});\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        currentSurah: state.currentSurah\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Home);","import React from 'react';\r\n\r\nconst ListAyyah = ({nomor,arab,arabTranslate,indonesia}) => {\r\n    return(\r\n        <div className=\"card mt-2 mb-2\">\r\n            <div className=\"card-body p-2\">\r\n                <span className=\"number-c-1\">{(nomor <= 9) ? '0'+nomor : nomor }</span>\r\n                <div className=\"text-right\">\r\n                    <span className=\"arabic\">{arab}</span>\r\n                </div>\r\n                <div className=\"text-left\">\r\n                    <span className=\"arabic-tr\"><div dangerouslySetInnerHTML={{__html: arabTranslate}} /></span>\r\n                </div>\r\n                <div className=\"text-left\">\r\n                    <span className=\"translate\">{indonesia}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ListAyyah;","import React from 'react';\r\n\r\nclass AudioPlay extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            play: false\r\n        }\r\n        this.togglePlay = this.togglePlay.bind(this);\r\n    }\r\n\r\n    // audio = new Audio(this.props.url);\r\n\r\n    togglePlay(){\r\n        this.setState({play: !this.state.play,}, () => {\r\n            // this.state.play ? this.audio.play() : this.audio.pause()\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"bottom-player\">\r\n                {/* <button onClick={this.togglePlay}>{this.state.play ? 'Pause' : 'Play'}</button> */}\r\n                <audio controls>\r\n                    <source src={this.props.url} type=\"audio/mpeg\"/>\r\n                </audio>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AudioPlay;","import React from 'react';\r\nimport DocumentMeta from 'react-document-meta';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { fetchNewAyyah, fetchNewSurah } from '../../services/redux/actionCreators';\r\nimport { Link, withRouter  } from 'react-router-dom';\r\n\r\nimport ListAyyah from './listAyyah/ListAyyah';\r\nimport AudioPlay from './audioPlayer/AudioPlay';\r\n\r\nclass Surah extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            noSurah: 0,\r\n            isLoadingTitle: false,\r\n            isLoadingContent: false,\r\n            redirect: false,\r\n            redirectSurah: 0,\r\n            itemSurah: {\r\n                asma: 'asma',\r\n                nama: 'Al-Fatihah',\r\n                arti: 'Pembukaan',\r\n            }\r\n        }\r\n        this.surahRedirect = this.surahRedirect.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        var nosurah = this.props.match.params.id;\r\n        this.setState({\r\n            noSurah: nosurah,\r\n            isLoadingTitle: true,\r\n            isLoadingContent: true\r\n        })\r\n        \r\n        this.props.updateAyyah(nosurah, () => {\r\n            this.setState({isLoadingContent: false})\r\n        })\r\n        this.props.updateSurah(() => {\r\n            this.setState({isLoadingTitle: false})\r\n            if(this.props.currentSurah.currentSurah.error === undefined){\r\n                this.props.currentSurah.currentSurah.map((item, index) => ( index === nosurah-1 ? this.setState({itemSurah: item}) : ''));\r\n            }\r\n            // console.log(this.props.currentSurah);\r\n        });\r\n\r\n        window.scrollTo(0,0);\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        this.props.currentAyyah.currentAyyah = [];\r\n        this.props.currentSurah.currentSurah = [];\r\n    }\r\n\r\n    surahRedirect(event){\r\n        this.props.currentAyyah.currentAyyah = [];\r\n        var id = event.target.value;\r\n        this.setState({\r\n            noSurah: id,\r\n            redirect: true,\r\n            redirectSurah: id,\r\n            isLoadingContent: true,\r\n        });\r\n        this.props.updateAyyah(id, () => {\r\n            this.setState({isLoadingContent: false})\r\n        });\r\n        if(this.props.currentSurah.currentSurah.error === undefined){\r\n            this.props.currentSurah.currentSurah.map((item, index) => (index === id-1 ? this.setState({itemSurah: item}) : ''));\r\n        }\r\n        this.props.history.push(\"/quran-web-app/surah/\"+id)\r\n    }\r\n\r\n    render(){\r\n        const { currentAyyah, currentSurah } = this.props;\r\n        const { isLoadingTitle, isLoadingContent, noSurah, itemSurah } = this.state;\r\n        const meta = {\r\n            title: itemSurah.nama+' - Quran Web',\r\n            description: itemSurah.keterangan,\r\n            meta: {\r\n                charset: 'utf-8',\r\n                name: {\r\n                keywords: 'react,meta,document,html,tags'\r\n                }\r\n            }\r\n        };\r\n\r\n        return(\r\n            <div className=\"container text-center mb-5 content\">\r\n                <DocumentMeta {...meta}/>\r\n\r\n                <div className=\"audio-player d-none\">\r\n                    {\r\n                    currentSurah.currentSurah.map === undefined \r\n                        ? '' \r\n                        : currentSurah.currentSurah.map((item, index) => (index === noSurah-1 && <AudioPlay key={index} url={item.audio}/>))\r\n                    }\r\n                </div>\r\n\r\n                <div className=\"row mt-3\">\r\n                    <div className=\"col-sm-2 text-left\">\r\n                        <Link to={'../'} className=\"link-back\"><button className=\"btn btn-c-green\">Kembali</button></Link>\r\n                    </div>\r\n                    <div className=\"col-sm-8\">\r\n                        <h2 className=\"title-surah\">{itemSurah.asma} - {itemSurah.nama} - {itemSurah.arti}</h2>\r\n                        <h2>{isLoadingTitle  && <div className=\"spinner-border text-c-green\" role=\"status\"><span className=\"sr-only\">Loading...</span></div>}</h2>\r\n                    </div>\r\n                    <div className=\"col-sm-2 text-right\">\r\n                        <span className=\"right-choice-surah\">\r\n                            <select className=\"form-control\" onChange={this.surahRedirect}>\r\n                                <option hidden>Pilih Surah</option>\r\n                                {\r\n                                currentSurah.currentSurah.map === undefined \r\n                                    ? '' \r\n                                    : currentSurah.currentSurah.map((item, index) => (<option key={index} value={item.nomor}>{item.nama}</option>))\r\n                                }\r\n                            </select>\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-sm-12 col-md-8\">\r\n                        \r\n                        <h2>{isLoadingContent  && <div className=\"spinner-border text-c-green\" role=\"status\"><span className=\"sr-only\">Loading...</span></div>}</h2>\r\n                        <div className=\"bx-items\">\r\n                            {\r\n                            currentAyyah.currentAyyah.map === undefined \r\n                                ? '' \r\n                                : currentAyyah.currentAyyah.map((item,index) => (<ListAyyah key={index} nomor={item.nomor} arab={item.ar} arabTranslate={item.tr} indonesia={item.id}/>))\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nSurah.propTypes = {\r\n    currentSurah: PropTypes.object.isRequired\r\n};\r\n  \r\nSurah.defaultProps = {\r\n    currentSurah: {\r\n        currentSurah: [{\r\n            asma: 'asma',\r\n            nama: 'Al-Fatihah',\r\n            arti: 'Pembukaan',\r\n            audio: 'audio',\r\n            nomor: 1\r\n        },{\r\n            asma: 'asma',\r\n            nama: 'Al-Baqarah',\r\n            arti: 'Sapi Betina',\r\n            audio: 'audio',\r\n            nomor: 2\r\n        },]\r\n    },\r\n    currentAyyah:{\r\n        currentAyyah:[{\r\n            nomor: '1',\r\n            ar: 'Arab',\r\n            tr: 'tr',\r\n            id: 'Indonesia',\r\n        },{\r\n            nomor: '2',\r\n            ar: 'Arab',\r\n            tr: 'tr',\r\n            id: 'Indonesia',\r\n        },{\r\n            nomor: '3',\r\n            ar: 'Arab',\r\n            tr: 'tr',\r\n            id: 'Indonesia',\r\n        }]\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    updateAyyah: (noSurah,callback) => dispatch(fetchNewAyyah(noSurah,callback)),\r\n    updateSurah: (callback) => dispatch(fetchNewSurah(callback))\r\n});\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        currentAyyah: state.currentAyyah,\r\n        currentSurah: state.currentSurah\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Surah));","import React from 'react';\r\nimport DocumentMeta from 'react-document-meta';\r\nimport { Link } from 'react-router-dom';\r\n \r\nconst meta = {\r\n    title: 'Oops not found - Quran Web',\r\n    description: 'I am a description, and I can create multiple tags',\r\n    meta: {\r\n        charset: 'utf-8',\r\n        name: {\r\n        keywords: 'react,meta,document,html,tags'\r\n        }\r\n    }\r\n};\r\n\r\nconst NoMatch = () => {\r\n    return(\r\n        <div className=\"container text-center\">\r\n            <DocumentMeta {...meta}/>\r\n            <div className=\"mt-5\">\r\n                <h2 className=\"_404title\">Oops 404!</h2> \r\n                <span className=\"_404desc\">page not found..</span>\r\n                <Link to=\"/quran-web-app/\" className=\"_404link\">Back home</Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NoMatch;","import React from 'react';\r\n\r\nconst handleToTop = () =>{\r\n    window.scrollTo(0,0)\r\n}\r\n\r\nclass TopButton extends React.Component{\r\n    render(){\r\n        return(\r\n            <div className=\"goUp\" onClick={handleToTop}>^</div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TopButton;","import React from 'react';\r\n\r\nconst Footer = () => {\r\n    return(\r\n        <footer className=\"footer\">\r\n            <div className=\"text-center\">\r\n                <span className=\"text-muted\">Copyright &copy; 2019 <a href=\"http://github.com/machmudeffendi\" className=\"link-footer\">Machmudfends</a></span>\r\n            </div>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport DocumentMeta from 'react-document-meta';\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\n\r\nimport Navbar from './view/navbar/Navbar';\r\nimport Home from './view/home/Home';\r\nimport Surah from './view/surah/Surah';\r\nimport NoMatch from './view/nomatch/NoMatch';\r\nimport TopButton from './view/topButton/TopButton';\r\nimport Footer from './view/footer';\r\n\r\nclass App extends React.Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n        darkMode: false,\r\n        busrainCss: ['busrain']\r\n    }\r\n    this.toggleDarkMode = this.toggleDarkMode.bind(this)\r\n  }\r\n\r\n  componentDidMount(){\r\n    // document.body.classList.add('d-flex');\r\n    // document.getElementsByTagName(\"HTML\").classList.add(\"h-100\");\r\n  }\r\n\r\n  toggleDarkMode(){\r\n      this.setState((state) => ({\r\n        darkMode: !state.darkMode,\r\n        busrainCss: ['busrain', !state.darkMode ? 'dark' : '']\r\n      }))\r\n  }\r\n\r\n  render(){\r\n    const meta = {\r\n      title: 'Home - Quran Web',\r\n      description: 'I am a description, and I can create multiple tags',\r\n      meta: {\r\n        charset: 'utf-8',\r\n        name: {\r\n          keywords: 'react,meta,document,html,tags'\r\n        }\r\n      }\r\n    };\r\n\r\n    return (\r\n      <div className={this.state.busrainCss.join(\" \")}>\r\n        <DocumentMeta {...meta}/>\r\n        <Router>\r\n          <Navbar title=\"Quran Web\" onClick={this.toggleDarkMode} darkmode={this.state.darkMode}/>\r\n          <Switch>\r\n            <Route path=\"/quran-web-app/\" exact component={Home}/>\r\n            <Route path=\"/quran-web-app/surah/:id\" exact component={Surah}/>\r\n            <Route component={NoMatch}/>\r\n          </Switch>\r\n          <TopButton/>\r\n        </Router>\r\n        <Footer/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const apiMiddleware = store => next => action => {\r\n    if(!action.meta || action.meta.type !== 'api'){\r\n        return next(action);\r\n    }\r\n\r\n    const { url, callback } = action.meta;\r\n    const fetchOption = Object.assign({}, action.meta);\r\n\r\n    fetch(url, fetchOption)\r\n        .then(response => response.json())\r\n        .then(json => {\r\n            if(typeof action.meta.onSuccess === 'function'){\r\n                action.meta.onSuccess(json);\r\n            }\r\n            return json;\r\n        })\r\n        .then(json => {\r\n            let newAction = Object.assign({}, action, {\r\n                payload: json\r\n            });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n            if(!!callback){\r\n                callback();\r\n            }\r\n        })\r\n}\r\n\r\nexport default apiMiddleware;","const loggingMiddleware = (store) => (next) => (action) => {\r\n    console.log(`Redux Log: `, action);\r\n    next(action);\r\n}\r\n\r\nexport default loggingMiddleware;","import * as types from './types';\r\n\r\nexport const initialState = {\r\n    currentSurah: []\r\n}\r\n\r\nexport const reducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case types.FETCH_NEW_SURAH:\r\n            return {...state, currentSurah: action.payload}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as types from './types';\r\n\r\nexport const initialState = {\r\n    currentAyyah: []\r\n}\r\n\r\nexport const reducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case types.FETCH_NEW_AYYAH:\r\n            return {...state, currentAyyah: action.payload}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import { combineReducers } from 'redux';\r\nimport * as currentSurah from './currentSurah';\r\nimport * as currentAyyah from './currentAyyah';\r\n\r\nexport const initialState = {\r\n    currentSurah: currentSurah.initialState,\r\n    currentAyyah: currentAyyah.initialState\r\n}\r\n\r\nexport const rootReducer = combineReducers({\r\n    currentSurah: currentSurah.reducer,\r\n    currentAyyah: currentAyyah.reducer\r\n})\r\n\r\nexport default rootReducer;","import { createStore, applyMiddleware } from 'redux';\r\nimport apiMiddleware from './apiMiddleware';\r\nimport loggingMiddleware from './loggingMiddleware';\r\nimport { rootReducer, initialState } from './reducers';\r\n\r\nexport const configureStore = () => {\r\n    const store = createStore(\r\n        \r\n        rootReducer,\r\n        initialState,\r\n        applyMiddleware(\r\n            apiMiddleware,\r\n            loggingMiddleware\r\n        )\r\n    )\r\n\r\n    return store;\r\n}\r\n\r\nexport default configureStore;","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport App from '../App';\r\nimport configureStore from '../services/redux/configureStore';\r\n\r\nconst Root = (props) => {\r\n    const store = configureStore();\r\n    return(\r\n        <Provider store={store}>\r\n            <App/>\r\n        </Provider>\r\n    )\r\n}\r\n\r\nexport default Root;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport Root from './containers/Root';\n\nReactDOM.render(<Root />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}