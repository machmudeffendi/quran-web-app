{"version":3,"sources":["serviceWorker.js","view/navbar/Navbar.js","view/home/listSurah/ListSurah.js","services/redux/config.js","services/redux/surah/action.js","services/redux/surah/actionTypes.js","view/home/Home.js","view/surah/listAyyah/ListAyyah.js","view/surah/Surah.js","view/nomatch/NoMatch.js","view/topButton/TopButton.js","view/footer/index.js","App.js","services/redux/apiMiddleware.js","services/redux/loggingMiddleware.js","services/redux/surah/surahReducer.js","services/redux/reducers.js","services/redux/configureStore.js","containers/Root.js","index.js"],"names":["Boolean","window","location","hostname","match","Navbar","this","props","title","onClick","darkmode","className","to","React","Component","ListSurah","item","nama","arabic","dangerouslySetInnerHTML","__html","terjemah","id","HOST","getAllSurah","callback","type","payload","meta","url","Home","state","isLoading","handleUpdateSurah","setState","updateSurah","document","currentSurah","Fragment","placeholder","role","undefined","map","index","key","defaultProps","connect","response","dataAllSurah","data","dispatch","ListAyyah","translate","latin","aya","text","Surah","noSurah","isLoadingTitle","isLoadingContent","redirect","redirectSurah","isValueSurahMounted","isTranslateMounted","isLatinMounted","surahRedirect","bind","nosurah","params","updateAyyah","updateAllSurah","updateTranslate","updateLatin","scrollTo","event","target","value","history","push","valueSurah","titleSurah","allSurah","idnTranslate","onChange","hidden","sura","withRouter","dataTitleSurah","dataValueSurah","dataIdnTranslate","dataLatin","getValueSurah","getTitleSurah","idSurah","getIdnTranslate","getLatin","NoMatch","handleToTop","TopButton","Footer","href","rel","App","darkMode","busrainCss","toggleDarkMode","join","path","exact","component","apiMiddleware","store","next","action","fetchOption","Object","assign","fetch","then","json","onSuccess","newAction","loggingMiddleware","console","log","initialState","reducer","dataSurah","rootReducer","combineReducers","configureStore","createStore","applyMiddleware","Root","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"qPAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,sFCcSC,E,iLA1BF,IAAD,EAC6BC,KAAKC,MAA/BC,EADH,EACGA,MAAMC,EADT,EACSA,QAAQC,EADjB,EACiBA,SACrB,OACI,yBAAKC,UAAU,uEACX,yBAAKA,UAAU,qCACX,kBAAC,IAAD,CAAMA,UAAU,4BAA4BC,GAAG,mBAAoBJ,GACnE,yBAAKG,UAAU,qCACX,wBAAIA,UAAU,uCAYlB,4BAAQA,UAAU,sCAAsCF,QAASA,GAAUC,EAAW,aAAe,mB,GArBpGG,IAAMC,WCsBZC,EAvBG,SAAC,GAAW,IAAVC,EAAS,EAATA,KAChB,OACI,yBAAKL,UAAU,gCACX,yBAAKA,UAAU,QACX,yBAAKA,UAAU,aACX,wBAAIA,UAAU,cAAcK,EAAKC,MACjC,wBAAIN,UAAU,iCAAiCK,EAAKE,QACpD,uBAAGP,UAAU,2BAA0B,0BAAMQ,wBAAyB,CAACC,OAAQJ,EAAKK,aACpF,kBAAC,IAAD,CAAMT,GAAI,wBAA0BI,EAAKM,GAAIX,UAAU,aAAvD,QACA,kBAAC,IAAD,CAAMC,GAAI,oCAAsCI,EAAKM,GAAIX,UAAU,aAAnE,uBCZPY,EAAO,iDCGPC,EAAc,SAACC,GAAD,MAAe,CACtCC,KCJyB,gBDKzBC,QAAS,GACTC,KAAM,CACFF,KAAM,MACNG,IAAKN,EAAO,SACZE,SAAUA,KEHZK,E,2MAEFC,MAAQ,CACJC,WAAW,G,EAafC,kBAAoB,WAChB,EAAKC,SAAS,CAACF,WAAW,IAC1B,EAAKzB,MAAM4B,aAAY,WACnB,EAAKD,SAAS,CAACF,WAAW,Q,mFAZ9B1B,KAAK2B,oBAELG,SAAS5B,MAAQ,qB,+BAcZ,IACG6B,EAAiB/B,KAAKC,MAAtB8B,aACAL,EAAc1B,KAAKyB,MAAnBC,UACR,OACI,kBAAC,IAAMM,SAAP,KACA,yBAAK3B,UAAU,6BACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,8BACX,yBAAKA,UAAU,iCACX,2BAAOe,KAAK,OAAOf,UAAU,qBAAqB4B,YAAY,sBAM9E,yBAAK5B,UAAU,0BACX,yBAAKA,UAAU,OACX,wBAAIA,UAAU,4CAA4CqB,GAAa,yBAAKrB,UAAU,8BAA8B6B,KAAK,UAAS,0BAAM7B,UAAU,WAAhB,qBAE7G8B,IAArBJ,EAAaK,IACP,0BAAM/B,UAAU,4BAAhB,+BACA0B,EAAaK,KAAI,SAAC1B,EAAK2B,GAAN,OAAiB,kBAAC,EAAD,CAAWC,IAAKD,EAAO3B,KAAMA,c,GA5CtEH,IAAMC,WAyDzBgB,EAAKe,aAAe,CAChBR,aAAc,IAiClB,IAYeS,eANS,SAAAf,GACpB,MAAO,CACHM,aAAcN,EAAMgB,SAASC,aAAaC,SARvB,SAAAC,GAAQ,MAAK,CACpCf,YAAa,SAACV,GACVyB,EAAS1B,EAAYC,QAUdqB,CAGbhB,GC3FaqB,EAnBG,SAAC,GAA8B,IAA7BnC,EAA4B,EAA5BA,KAAMoC,EAAsB,EAAtBA,UAAWC,EAAW,EAAXA,MACjC,OACI,yBAAK1C,UAAU,kBACX,yBAAKA,UAAU,iBACX,0BAAMA,UAAU,cAAeK,EAAKsC,KAAO,EAAK,IAAItC,EAAKsC,IAAMtC,EAAKsC,KACpE,yBAAK3C,UAAU,cACX,0BAAMA,UAAU,UAAUK,EAAKuC,OAEnC,yBAAK5C,UAAU,aACX,0BAAMA,UAAU,aAAY,yBAAKQ,wBAAyB,CAACC,OAAQiC,EAAME,UAE7E,yBAAK5C,UAAU,aACX,0BAAMA,UAAU,aAAayC,EAAUG,UCLrDC,E,YACF,WAAYjD,GAAO,IAAD,8BACd,4CAAMA,KACDwB,MAAQ,CACT0B,QAAS,EACTC,gBAAgB,EAChBC,kBAAkB,EAClBC,UAAU,EACVC,cAAe,EACfC,qBAAqB,EACrBC,oBAAoB,EACpBC,gBAAgB,GAEpB,EAAKC,cAAgB,EAAKA,cAAcC,KAAnB,gBAZP,E,iFAeE,IAAD,OACf5D,KAAK4B,SAAS,CACV4B,qBAAqB,EACrBC,oBAAoB,EACpBC,gBAAgB,IAGpB,IAAIG,EAAU7D,KAAKC,MAAMH,MAAMgE,OAAO9C,GACtChB,KAAK4B,SAAS,CACVuB,QAASU,EACTT,gBAAgB,EAChBC,kBAAkB,IAGtBrD,KAAKC,MAAM8D,YAAYF,GAAS,WAC5B,EAAKjC,SAAS,CACVyB,kBAAkB,EAClBG,qBAAqB,OAG7BxD,KAAKC,MAAM4B,YAAYgC,GAAS,WAC5B,EAAKjC,SAAS,CACVwB,gBAAgB,OAIxBpD,KAAKC,MAAM+D,gBAAe,eAC1BhE,KAAKC,MAAMgE,gBAAgBJ,GAAS,WAChC,EAAKjC,SAAS,CACV6B,oBAAoB,OAG5BzD,KAAKC,MAAMiE,YAAYL,GAAS,WAC5B,EAAKjC,SAAS,CACV8B,gBAAgB,OAIxB5B,SAAS5B,MAAQ,SAAS2D,EAAQ,eAClClE,OAAOwE,SAAS,EAAE,K,oCAGRC,GAAO,IAAD,OAEZpD,EAAKoD,EAAMC,OAAOC,MACtBtE,KAAK4B,SAAS,CACVuB,QAASnC,EACTsC,UAAU,EACVC,cAAevC,EACfoC,gBAAgB,EAChBC,kBAAkB,EAClBG,qBAAqB,EACrBC,oBAAoB,EACpBC,gBAAgB,IAEpB1D,KAAKC,MAAM8D,YAAY/C,GAAI,WACvB,EAAKY,SAAS,CACVyB,kBAAkB,EAClBG,qBAAqB,OAG7BxD,KAAKC,MAAM4B,YAAYb,GAAI,WACvB,EAAKY,SAAS,CAACwB,gBAAgB,OAEnCpD,KAAKC,MAAMgE,gBAAgBjD,GAAI,eAC/BhB,KAAKC,MAAMgE,gBAAgBjD,GAAI,WAC3B,EAAKY,SAAS,CACV6B,oBAAoB,OAG5BzD,KAAKC,MAAMiE,YAAYlD,GAAI,WACvB,EAAKY,SAAS,CACV8B,gBAAgB,OAIxB5B,SAAS5B,MAAQ,SAASc,EAAG,eAE7BhB,KAAKC,MAAMsE,QAAQC,KAAK,wBAAwBxD,K,+BAG3C,IAAD,EAC8DhB,KAAKC,MAA/DwE,EADJ,EACIA,WAAYC,EADhB,EACgBA,WAAYC,EAD5B,EAC4BA,SAAUC,EADtC,EACsCA,aAAc7B,EADpD,EACoDA,MADpD,EAEkG/C,KAAKyB,MAAnG2B,EAFJ,EAEIA,eAAgBC,EAFpB,EAEoBA,iBAAkBG,EAFtC,EAEsCA,oBAAqBC,EAF3D,EAE2DA,mBAAoBC,EAF/E,EAE+EA,eAEnF,OACI,yBAAKrD,UAAU,sCACX,yBAAKA,UAAU,QAEf,yBAAKA,UAAU,YACX,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,gBACX,kBAAC,IAAD,CAAMC,GAAI,MAAOD,UAAU,aAAY,4BAAQA,UAAU,6BAAlB,YACvC,4BAAQA,UAAU,mCAAmCwE,SAAU7E,KAAK2D,eAChE,4BAAQmB,QAAM,GAAd,oBAEiB3C,IAAjBwC,EAASvC,IACH,GACAuC,EAASvC,KAAI,SAAC1B,EAAM2B,GAAP,OAAkB,4BAAQC,IAAKD,EAAOiC,MAAO5D,EAAKM,IAAKN,EAAKC,WAIvF,yBAAKN,UAAU,kBACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,aACX,wBAAIA,UAAU,eAAeqE,EAAW9D,OAAxC,MAAmD8D,EAAW/D,KAA9D,MAAuE+D,EAAW3D,cAKlG,yBAAKV,UAAU,6CACX,4BAAMgD,GAAoBD,GAAoB,yBAAK/C,UAAU,8BAA8B6B,KAAK,UAAS,0BAAM7B,UAAU,WAAhB,gBACzG,yBAAKA,UAAU,YAEVmD,GAAuBC,GAAsBC,GAAmBe,EAAWrC,KAAI,SAAC1B,EAAK2B,GAAN,OAAiB,kBAAC,EAAD,CAAWC,IAAKD,EAAO3B,KAAMA,EAAMoC,UAAW8B,EAAavC,GAAQU,MAAOA,EAAMV,gB,GAlIzL9B,IAAMC,WAmJ1B0C,EAAMX,aAAe,CACjBmC,WAAY,GACZD,WAAY,GACZE,SAAU,GACVC,aAAc,CACV,CAACG,KAAM,EAAG/B,IAAK,EAAGC,KAAM,OAE5BF,MAAO,CACH,CAACgC,KAAM,EAAG/B,IAAK,EAAGC,KAAM,QAIhC,IAkBe+B,cAAWxC,aAVF,SAAAf,GACpB,MAAO,CACHiD,WAAYjD,EAAMgB,SAASwC,eAC3BN,SAAUlD,EAAMgB,SAASC,aAAaC,KACtC8B,WAAYhD,EAAMgB,SAASyC,eAAevC,KAC1CiC,aAAcnD,EAAMgB,SAAS0C,iBAAiBxC,KAC9CI,MAAOtB,EAAMgB,SAAS2C,UAAUzC,SAdb,SAAAC,GAAQ,MAAK,CACpCmB,YAAa,SAACZ,EAAQhC,GAAT,OAAsByB,EJlJV,SAACO,EAAShC,GAAV,MAAwB,CACjDC,KCtB2B,kBDuB3BC,QAAS,GACTC,KAAM,CACFF,KAAM,MACNG,IAAKN,EAAI,yBAAqBkC,GAC9BhC,SAAUA,II4I8BkE,CAAclC,EAAQhC,KAClEU,YAAa,SAACsB,EAAQhC,GAAT,OAAsByB,EJ7JV,SAACO,EAAShC,GAAV,MAAwB,CACjDC,KCb0B,kBDc1BC,QAAS,GACTC,KAAM,CACFF,KAAM,MACNG,IAAKN,EAAI,iBAAakC,GACtBhC,SAAUA,IIuJ8BmE,CAAcnC,EAAQhC,KAClE6C,eAAgB,SAAC7C,GAAD,OAAcyB,EAAS1B,EAAYC,KACnD8C,gBAAiB,SAACd,EAAShC,GAAV,OAAuByB,EJ3Ib,SAAC2C,EAASpE,GAAV,MAAwB,CACnDC,KC/B0B,iBDgC1BC,QAAS,GACTC,KAAM,CACFF,KAAM,MACNG,IAAKN,EAAI,oBAAgBsE,GACzBpE,SAAUA,IIqImCqE,CAAgBrC,EAAShC,KAC1E+C,YAAa,SAACf,EAAShC,GAAV,OAAuByB,EJlIhB,SAAC2C,EAASpE,GAAV,MAAwB,CAC5CC,KCxCqB,YDyCrBC,QAAS,GACTC,KAAM,CACFF,KAAM,MACNG,IAAKN,EAAK,UAAD,OAAWsE,GACpBpE,SAAUA,II4H+BsE,CAAStC,EAAShC,QAazCqB,CAGxBU,IC7KawC,EAZC,WACZ,OACI,yBAAKrF,UAAU,yBACX,yBAAKA,UAAU,QACX,wBAAIA,UAAU,aAAd,gBCNVsF,EAAc,WAChBhG,OAAOwE,SAAS,EAAE,IAWPyB,E,iLANP,OACI,yBAAKvF,UAAU,OAAOF,QAASwF,GAA/B,S,GAHYpF,IAAMC,WCMfqF,EAVA,WACX,OACI,4BAAQxF,UAAU,UACd,yBAAKA,UAAU,eACX,0BAAMA,UAAU,cAAhB,8BAA0D,uBAAGyF,KAAK,mCAAmCzF,UAAU,cAAcgE,OAAO,SAAS0B,IAAI,uBAAvF,oBCoD3DC,E,YA5Cb,WAAY/F,GAAO,IAAD,8BAChB,4CAAMA,KACDwB,MAAQ,CACTwE,UAAU,EACVC,WAAY,CAAC,YAEjB,EAAKC,eAAiB,EAAKA,eAAevC,KAApB,gBANN,E,2HAed5D,KAAK4B,UAAS,SAACH,GAAD,MAAY,CACxBwE,UAAWxE,EAAMwE,SACjBC,WAAY,CAAC,UAAYzE,EAAMwE,SAAoB,GAAT,c,+BAO9C,OACE,yBAAK5F,UAAWL,KAAKyB,MAAMyE,WAAWE,KAAK,MACzC,kBAAC,IAAD,KACE,kBAAC,EAAD,CAAQlG,MAAM,sBAAsBC,QAASH,KAAKmG,eAAgB/F,SAAUJ,KAAKyB,MAAMwE,WACvF,yBAAK5F,UAAU,eACf,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOgG,KAAK,IAAIC,OAAK,EAACC,UAAW/E,IACjC,kBAAC,IAAD,CAAO6E,KAAK,kBAAkBC,OAAK,EAACC,UAAW/E,IAC/C,kBAAC,IAAD,CAAO6E,KAAK,2BAA2BC,OAAK,EAACC,UAAWrD,IACxD,kBAAC,IAAD,CAAOqD,UAAWb,MAGpB,kBAAC,EAAD,OAEF,kBAAC,EAAD,W,GAvCUnF,IAAMC,W,QCeTgG,EA5BO,SAAAC,GAAK,OAAI,SAAAC,GAAI,OAAI,SAAAC,GACnC,IAAIA,EAAOrF,MAA6B,QAArBqF,EAAOrF,KAAKF,KAC3B,OAAOsF,EAAKC,GAF6B,MAKnBA,EAAOrF,KAAzBC,EALqC,EAKrCA,IAAKJ,EALgC,EAKhCA,SACPyF,EAAcC,OAAOC,OAAO,GAAIH,EAAOrF,MAE7CyF,MAAMxF,EAAKqF,GACNI,MAAK,SAAAvE,GAAQ,OAAIA,EAASwE,UAC1BD,MAAK,SAAAC,GAIF,MAHoC,oBAA1BN,EAAOrF,KAAK4F,WAClBP,EAAOrF,KAAK4F,UAAUD,GAEnBA,KAEVD,MAAK,SAAAC,GACF,IAAIE,EAAYN,OAAOC,OAAO,GAAIH,EAAQ,CACtCtF,QAAS4F,WAENE,EAAU7F,KACjBmF,EAAM7D,SAASuE,GACVhG,GACDA,UClBDiG,EALW,SAACX,GAAD,OAAW,SAACC,GAAD,OAAU,SAACC,GAC5CU,QAAQC,IAAR,cAA2BX,GAC3BD,EAAKC,M,ikBCAF,IAAMY,EAAe,CACxB7E,aAAc,GACdwC,eAAgB,GAChBC,iBAAkB,GAClBC,UAAW,IAGFoC,EAAU,WAAmC,IAAlC/F,EAAiC,uDAAzB8F,EAAcZ,EAAW,uCACrD,OAAOA,EAAOvF,MACV,IVXqB,gBUYjB,OAAO,EAAP,GAAWK,EAAX,CAAkBiB,aAAciE,EAAOtF,UAC3C,IVZsB,kBUalB,OAAO,EAAP,GAAWI,EAAX,CAAkBwD,eAAgB0B,EAAOtF,UAC7C,IVbuB,kBUcnB,OAAO,EAAP,GAAWI,EAAX,CAAkByD,eAAgByB,EAAOtF,UAC7C,IVdsB,iBUelB,OAAO,EAAP,GAAWI,EAAX,CAAkB0D,iBAAkBwB,EAAOtF,UAC/C,IVfiB,YUgBb,OAAO,EAAP,GAAWI,EAAX,CAAkB2D,UAAWuB,EAAOtF,UACxC,QACI,OAAOI,ICnBN8F,EAAe,CACxB9E,SAAUgF,GAGDC,EAAcC,YAAgB,CACvClF,SAAUgF,ICWCG,EAde,WAW1B,OAVcC,YAEVH,EACAH,EACAO,YACItB,EACAY,KCEGW,EATF,SAAC9H,GACV,IAAMwG,EAAQmB,IACd,OACI,kBAAC,IAAD,CAAUnB,MAAOA,GACb,kBAAC,EAAD,QCFZuB,IAASC,OAAO,kBAAC,EAAD,MAAUnG,SAASoG,eAAe,SnB0H5C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMrB,MAAK,SAAAsB,GACjCA,EAAaC,kB","file":"static/js/main.75ce8f68.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nclass Navbar extends React.Component{\r\n\r\n    render(){\r\n        const {title,onClick,darkmode} = this.props\r\n        return(\r\n            <nav className=\"navbar navbar-expand navbar-dark bg-c-green navbar-shadow fixed-top\">\r\n                <div className=\"container flex-column flex-md-row\">\r\n                    <Link className=\"navbar-brand mr-0 mr-md-2\" to=\"/quran-web-app/\" >{title}</Link>\r\n                    <div className=\"navbar-nav-scroll ml-lg-3 mr-lg-4\">\r\n                        <ul className=\"navbar-nav bd-navbar-nav flex-row\">\r\n                            {/*<li className=\"nav-item active\">\r\n                                <Link className=\"nav-item nav-link active\" to=\"/#\">Home <span className=\"sr-only\">(current)</span></Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-item nav-link\" to=\"/quran-web-app/surah\">Baca Surah</Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-item nav-link\" to=\"/quran-web-app/description\">Lihat Deskripsi</Link>\r\n                            </li>*/}\r\n                        </ul>\r\n                    </div>\r\n                    <button className=\"btn btn-dark btn-c-nav btn-m-bottom\" onClick={onClick}>{darkmode ? 'Light Mode' : 'Dark Mode'}</button>\r\n                </div>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst ListSurah = ({item}) =>{\r\n    return(\r\n        <div className=\"col-sm-12 col-md-4 mt-3 mb-3\">\r\n            <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">{item.nama}</h5>\r\n                    <h6 className=\"card-subtitle mb-2 text-muted\">{item.arabic}</h6>\r\n                    <p className=\"card-text desc-h-scroll\"><span dangerouslySetInnerHTML={{__html: item.terjemah}} /></p>\r\n                    <Link to={'/quran-web-app/surah/' + item.id} className=\"card-link\">Baca</Link>\r\n                    <Link to={'/quran-web-app/surah/description/' + item.id} className=\"card-link\">Lihat Deskripsi</Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        // <div className=\"items\" key={index}>\r\n        //     <div className=\"book\">\r\n        //         <Link to={'/surah/' + nomor} className=\"title-link\">{nama}</Link>\r\n        //         <p className=\"text-grey\">{asma}</p>\r\n        //         <span>{nomor}</span>\r\n        //     </div>\r\n        // </div>\r\n    )\r\n}\r\n\r\nexport default ListSurah;","export const HOST = \"https://quran-api-service.herokuapp.com/api/v1\";\r\n// export const HOST = \"http://localhost:8080/api/v1\";","import * as types from './actionTypes';\r\nimport { HOST } from '../config';\r\n\r\nexport const getAllSurah = (callback) => ({\r\n    type: types.GET_ALL_SURAH,\r\n    payload: [],\r\n    meta: {\r\n        type: 'api',\r\n        url: HOST + \"/surah\",\r\n        callback: callback\r\n    }\r\n})\r\n\r\nexport const getTitleSurah = (noSurah, callback) => ({\r\n    type: types.GET_TITLE_SURAH,\r\n    payload: [],\r\n    meta: {\r\n        type: 'api',\r\n        url: HOST + `/surah/${noSurah}`,\r\n        callback: callback\r\n    }\r\n})\r\n\r\nexport const getValueSurah = (noSurah, callback) => ({\r\n    type: types.GET_VALUE_SURAH,\r\n    payload: [],\r\n    meta: {\r\n        type: 'api',\r\n        url: HOST + `/quran-indopak/${noSurah}`,\r\n        callback: callback\r\n    }\r\n})\r\n\r\nexport const getIdnTranslate = (idSurah, callback) => ({\r\n    type: types.GET_TERJEMAHAN,\r\n    payload: [],\r\n    meta: {\r\n        type: 'api',\r\n        url: HOST + `/terjemah/${idSurah}`,\r\n        callback: callback\r\n    }\r\n})\r\n\r\nexport const getLatin = (idSurah, callback) => ({\r\n    type: types.GET_LATIN,\r\n    payload: [],\r\n    meta: {\r\n        type: 'api',\r\n        url: HOST+`/latin/${idSurah}`,\r\n        callback: callback\r\n    }\r\n})","export const GET_ALL_SURAH = \"GET_ALL_SURAH\";\r\nexport const GET_TITLE_SURAH =\"GET_TITLE_SURAH\";\r\nexport const GET_VALUE_SURAH = \"GET_VALUE_SURAH\";\r\nexport const GET_TERJEMAHAN = 'GET_TERJEMAHAN';\r\nexport const GET_LATIN = 'GET_LATIN';","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport ListSurah from './listSurah/ListSurah';\r\nimport { getAllSurah } from '../../services/redux/surah/action';\r\n\r\nclass Home extends React.Component {\r\n\r\n    state = {\r\n        isLoading: false\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.handleUpdateSurah()\r\n\r\n        document.title = \"Home - Quran web\"\r\n    }\r\n\r\n    // componentWillUnmount(){\r\n    //     this.props.currentSurah = [];\r\n    // }\r\n\r\n    handleUpdateSurah = () => {\r\n        this.setState({isLoading: true})\r\n        this.props.updateSurah(() => {\r\n            this.setState({isLoading: false})\r\n        })\r\n    }\r\n\r\n    render(){\r\n        const { currentSurah } = this.props;\r\n        const { isLoading } = this.state;\r\n        return(\r\n            <React.Fragment>\r\n            <div className=\"jumbotron jumbotron-fluid\">\r\n                <div className=\"container\">\r\n                    <div className=\"row justify-content-center\">\r\n                        <div className=\"col-lg-8 col-md-12 search-box\">\r\n                            <input type=\"text\" className=\"form-control w-100\" placeholder=\"Cari disini..\"/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n            <div className=\"container mb-5 content\">\r\n                <div className=\"row\">\r\n                    <h2 className=\"text-center justify-content-center w-100\">{isLoading && <div className=\"spinner-border text-c-green\" role=\"status\"><span className=\"sr-only\">Loading...</span></div>}</h2>\r\n                    {\r\n                    currentSurah.map === undefined \r\n                        ? <span className=\"alert alert-danger w-100\">Opps... Not found any data!</span> \r\n                        : currentSurah.map((item,index) => (<ListSurah key={index} item={item}/>))\r\n                    }\r\n                </div>\r\n            </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nHome.propTypes = {\r\n    currentSurah: PropTypes.array.isRequired\r\n};\r\n  \r\nHome.defaultProps = {\r\n    currentSurah: [\r\n        // {\r\n        //     asma: 'asma',\r\n        //     nama: 'Al-Fatihah',\r\n        //     arti: 'Pembukaan',\r\n        //     keterangan: 'Keterangan',\r\n        //     audio: 'audio',\r\n        //     nomor: 1\r\n        // },{\r\n        //     asma: 'asma',\r\n        //     nama: 'Al-Baqarah',\r\n        //     arti: 'Sapi Betina',\r\n        //     keterangan: 'Keterangan',\r\n        //     audio: 'audio',\r\n        //     nomor: 2\r\n        // },{\r\n        //     asma: 'asma',\r\n        //     nama: 'Ali\\'Imran',\r\n        //     arti: 'Keluarga Imran',\r\n        //     keterangan: 'Keterangan',\r\n        //     audio: 'audio',\r\n        //     nomor: 3\r\n        // },{\r\n        //     asma: 'asma',\r\n        //     nama: 'An-Nisa',\r\n        //     arti: 'Wanita',\r\n        //     keterangan: 'Keterangan',\r\n        //     audio: 'audio',\r\n        //     nomor: 4\r\n        // },\r\n    ]\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    updateSurah: (callback) => {\r\n        dispatch(getAllSurah(callback))\r\n    }\r\n});\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        currentSurah: state.response.dataAllSurah.data\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Home);","import React from 'react';\r\n\r\nconst ListAyyah = ({item, translate, latin}) => {\r\n    return(\r\n        <div className=\"card mt-2 mb-2\">\r\n            <div className=\"card-body p-2\">\r\n                <span className=\"number-c-1\">{(item.aya <= 9) ? '0'+item.aya : item.aya }</span>\r\n                <div className=\"text-right\">\r\n                    <span className=\"arabic\">{item.text}</span>\r\n                </div>\r\n                <div className=\"text-left\">\r\n                    <span className=\"arabic-tr\"><div dangerouslySetInnerHTML={{__html: latin.text}} /></span>\r\n                </div>\r\n                <div className=\"text-left\">\r\n                    <span className=\"translate\">{translate.text}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ListAyyah;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { Link, withRouter  } from 'react-router-dom';\r\n\r\nimport ListAyyah from './listAyyah/ListAyyah';\r\nimport { getValueSurah, getTitleSurah, getAllSurah, getIdnTranslate, getLatin } from '../../services/redux/surah/action';\r\n\r\nclass Surah extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            noSurah: 0,\r\n            isLoadingTitle: false,\r\n            isLoadingContent: false,\r\n            redirect: false,\r\n            redirectSurah: 0,\r\n            isValueSurahMounted: false,\r\n            isTranslateMounted: false,\r\n            isLatinMounted: false,\r\n        }\r\n        this.surahRedirect = this.surahRedirect.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.setState({\r\n            isValueSurahMounted: false,\r\n            isTranslateMounted: false,\r\n            isLatinMounted: false,\r\n        })\r\n\r\n        var nosurah = this.props.match.params.id;\r\n        this.setState({\r\n            noSurah: nosurah,\r\n            isLoadingTitle: true,\r\n            isLoadingContent: true\r\n        })\r\n        \r\n        this.props.updateAyyah(nosurah, () => {\r\n            this.setState({\r\n                isLoadingContent: false,\r\n                isValueSurahMounted: true,\r\n            })\r\n        })\r\n        this.props.updateSurah(nosurah, () => {\r\n            this.setState({\r\n                isLoadingTitle: false\r\n            })\r\n            // console.log(this.props.titleSurah);\r\n        });\r\n        this.props.updateAllSurah(() => {})\r\n        this.props.updateTranslate(nosurah, () => {\r\n            this.setState({\r\n                isTranslateMounted: true,\r\n            })\r\n        })\r\n        this.props.updateLatin(nosurah, () => {\r\n            this.setState({\r\n                isLatinMounted: true,\r\n            })\r\n        })\r\n\r\n        document.title = \"Surah \"+nosurah+\" - Quran web\"\r\n        window.scrollTo(0,0);\r\n    }\r\n\r\n    surahRedirect(event){\r\n        // this.props.valueSurah = [];\r\n        var id = event.target.value;\r\n        this.setState({\r\n            noSurah: id,\r\n            redirect: true,\r\n            redirectSurah: id,\r\n            isLoadingTitle: true,\r\n            isLoadingContent: true,\r\n            isValueSurahMounted: false,\r\n            isTranslateMounted: false,\r\n            isLatinMounted: false,\r\n        });\r\n        this.props.updateAyyah(id, () => {\r\n            this.setState({\r\n                isLoadingContent: false,\r\n                isValueSurahMounted: true\r\n            })\r\n        });\r\n        this.props.updateSurah(id, () => {\r\n            this.setState({isLoadingTitle: false})\r\n        });\r\n        this.props.updateTranslate(id, () => {})\r\n        this.props.updateTranslate(id, () => {\r\n            this.setState({\r\n                isTranslateMounted: true,\r\n            })\r\n        })\r\n        this.props.updateLatin(id, () => {\r\n            this.setState({\r\n                isLatinMounted: true,\r\n            })\r\n        })\r\n\r\n        document.title = \"Surah \"+id+\" - Quran web\"\r\n\r\n        this.props.history.push(\"/quran-web-app/surah/\"+id)\r\n    }\r\n\r\n    render(){\r\n        const { valueSurah, titleSurah, allSurah, idnTranslate, latin } = this.props;\r\n        const { isLoadingTitle, isLoadingContent, isValueSurahMounted, isTranslateMounted, isLatinMounted } = this.state;\r\n\r\n        return(\r\n            <div className=\"container text-center mb-5 content\">\r\n                <div className=\"row\">\r\n                </div>\r\n                <div className=\"row mt-3\">\r\n                    <div className=\"col-sm-12 col-md-4 \">\r\n                        <div className=\"sidebar-menu\">\r\n                            <Link to={'../'} className=\"link-back\"><button className=\"btn btn-c-green btn-block\">Kembali</button></Link>\r\n                            <select className=\"form-control rounded-select mt-3\" onChange={this.surahRedirect}>\r\n                                <option hidden>Pilih Surah</option>\r\n                                {\r\n                                allSurah.map === undefined \r\n                                    ? '' \r\n                                    : allSurah.map((item, index) => (<option key={index} value={item.id}>{item.nama}</option>))\r\n                                }\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"sticky-sidebar\">\r\n                            <div className=\"card mt-3\">\r\n                                <div className=\"card-body\">\r\n                                    <h2 className=\"title-surah\">{titleSurah.arabic} - {titleSurah.nama} - {titleSurah.terjemah}</h2>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-8 col-sm-12 justify-content-center\">\r\n                        <h2>{(isLoadingContent && isLoadingTitle)  && <div className=\"spinner-border text-c-green\" role=\"status\"><span className=\"sr-only\">Loading...</span></div>}</h2>\r\n                        <div className=\"bx-items\">\r\n                            {\r\n                            (isValueSurahMounted && isTranslateMounted && isLatinMounted) && valueSurah.map((item,index) => (<ListAyyah key={index} item={item} translate={idnTranslate[index]} latin={latin[index]}/>))\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nSurah.propTypes = {\r\n    titleSurah: PropTypes.object.isRequired,\r\n    valueSurah: PropTypes.array.isRequired,\r\n    allSurah: PropTypes.array.isRequired,\r\n    idnTranslate: PropTypes.array.isRequired,\r\n};\r\n  \r\nSurah.defaultProps = {\r\n    titleSurah: {},\r\n    valueSurah: [],\r\n    allSurah: [],\r\n    idnTranslate: [\r\n        {sura: 1, aya: 1, text: null}\r\n    ],\r\n    latin: [\r\n        {sura: 1, aya: 1, text: null}  \r\n    ]\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    updateAyyah: (noSurah,callback) => dispatch(getValueSurah(noSurah,callback)),\r\n    updateSurah: (noSurah,callback) => dispatch(getTitleSurah(noSurah,callback)),\r\n    updateAllSurah: (callback) => dispatch(getAllSurah(callback)),\r\n    updateTranslate: (noSurah, callback) => dispatch(getIdnTranslate(noSurah, callback)),\r\n    updateLatin: (noSurah, callback) => dispatch(getLatin(noSurah, callback)),\r\n});\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        titleSurah: state.response.dataTitleSurah,\r\n        allSurah: state.response.dataAllSurah.data,\r\n        valueSurah: state.response.dataValueSurah.data,\r\n        idnTranslate: state.response.dataIdnTranslate.data,\r\n        latin: state.response.dataLatin.data,\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Surah));","import React from 'react';\r\n// import { Link } from 'react-router-dom';\r\n \r\n\r\nconst NoMatch = () => {\r\n    return(\r\n        <div className=\"container text-center\">\r\n            <div className=\"mt-5\">\r\n                <h2 className=\"_404title\">Oops 404!</h2> \r\n                {/*<span className=\"_404desc\">page not found..</span>\r\n                <Link to=\"/\" className=\"_404link\">Back home</Link>*/}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NoMatch;","import React from 'react';\r\n\r\nconst handleToTop = () =>{\r\n    window.scrollTo(0,0)\r\n}\r\n\r\nclass TopButton extends React.Component{\r\n    render(){\r\n        return(\r\n            <div className=\"goUp\" onClick={handleToTop}>^</div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TopButton;","import React from 'react';\r\n\r\nconst Footer = () => {\r\n    return(\r\n        <footer className=\"footer\">\r\n            <div className=\"text-center\">\r\n                <span className=\"text-muted\">Copyright &copy; 2019 - 2020 <a href=\"http://github.com/machmudeffendi\" className=\"link-footer\" target=\"_blank\" rel=\"noopener noreferrer\">Machmudfends</a></span>\r\n            </div>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\n\r\nimport Navbar from './view/navbar/Navbar';\r\nimport Home from './view/home/Home';\r\nimport Surah from './view/surah/Surah';\r\nimport NoMatch from './view/nomatch/NoMatch';\r\nimport TopButton from './view/topButton/TopButton';\r\nimport Footer from './view/footer';\r\n\r\nclass App extends React.Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n        darkMode: false,\r\n        busrainCss: ['busrain']\r\n    }\r\n    this.toggleDarkMode = this.toggleDarkMode.bind(this)\r\n  }\r\n\r\n  componentDidMount(){\r\n    // document.body.classList.add('d-flex');\r\n    // document.getElementsByTagName(\"HTML\").classList.add(\"h-100\");\r\n  }\r\n\r\n  toggleDarkMode(){\r\n      this.setState((state) => ({\r\n        darkMode: !state.darkMode,\r\n        busrainCss: ['busrain', !state.darkMode ? 'dark' : '']\r\n      }))\r\n  }\r\n\r\n  render(){\r\n    \r\n\r\n    return (\r\n      <div className={this.state.busrainCss.join(\" \")}>\r\n        <Router>\r\n          <Navbar title=\"Al-Qur'an Indonesia\" onClick={this.toggleDarkMode} darkmode={this.state.darkMode}/>\r\n          <div className=\"content-box\">\r\n          <Switch>\r\n            <Route path=\"/\" exact component={Home}/>\r\n            <Route path=\"/quran-web-app/\" exact component={Home}/>\r\n            <Route path=\"/quran-web-app/surah/:id\" exact component={Surah}/>\r\n            <Route component={NoMatch}/>\r\n          </Switch>\r\n          </div>\r\n          <TopButton/>\r\n        </Router>\r\n        <Footer/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const apiMiddleware = store => next => action => {\r\n    if(!action.meta || action.meta.type !== 'api'){\r\n        return next(action);\r\n    }\r\n\r\n    const { url, callback } = action.meta;\r\n    const fetchOption = Object.assign({}, action.meta);\r\n\r\n    fetch(url, fetchOption)\r\n        .then(response => response.json())\r\n        .then(json => {\r\n            if(typeof action.meta.onSuccess === 'function'){\r\n                action.meta.onSuccess(json);\r\n            }\r\n            return json;\r\n        })\r\n        .then(json => {\r\n            let newAction = Object.assign({}, action, {\r\n                payload: json\r\n            });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n            if(!!callback){\r\n                callback();\r\n            }\r\n        })\r\n}\r\n\r\nexport default apiMiddleware;","const loggingMiddleware = (store) => (next) => (action) => {\r\n    console.log(`Redux Log: `, action);\r\n    next(action);\r\n}\r\n\r\nexport default loggingMiddleware;","import * as types from \"./actionTypes\";\r\n\r\nexport const initialState = {\r\n    dataAllSurah: {},\r\n    dataValueSurah: {},\r\n    dataIdnTranslate: {},\r\n    dataLatin: {},\r\n}\r\n\r\nexport const reducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case types.GET_ALL_SURAH:\r\n            return {...state, dataAllSurah: action.payload}\r\n        case types.GET_TITLE_SURAH:\r\n            return {...state, dataTitleSurah: action.payload}\r\n        case types.GET_VALUE_SURAH:\r\n            return {...state, dataValueSurah: action.payload}\r\n        case types.GET_TERJEMAHAN:\r\n            return {...state, dataIdnTranslate: action.payload}\r\n        case types.GET_LATIN:\r\n            return {...state, dataLatin: action.payload}\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import { combineReducers } from 'redux';\r\nimport * as dataSurah from './surah/surahReducer';\r\n\r\nexport const initialState = {\r\n    response: dataSurah.initialState\r\n}\r\n\r\nexport const rootReducer = combineReducers({\r\n    response: dataSurah.reducer\r\n})\r\n\r\nexport default rootReducer;","import { createStore, applyMiddleware } from 'redux';\r\nimport apiMiddleware from './apiMiddleware';\r\nimport loggingMiddleware from './loggingMiddleware';\r\nimport { rootReducer, initialState } from './reducers';\r\n\r\nexport const configureStore = () => {\r\n    const store = createStore(\r\n        \r\n        rootReducer,\r\n        initialState,\r\n        applyMiddleware(\r\n            apiMiddleware,\r\n            loggingMiddleware\r\n        )\r\n    )\r\n\r\n    return store;\r\n}\r\n\r\nexport default configureStore;","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport App from '../App';\r\nimport configureStore from '../services/redux/configureStore';\r\n\r\nconst Root = (props) => {\r\n    const store = configureStore();\r\n    return(\r\n        <Provider store={store}>\r\n            <App/>\r\n        </Provider>\r\n    )\r\n}\r\n\r\nexport default Root;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport Root from './containers/Root';\n\nReactDOM.render(<Root />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}